{"version":3,"sources":["igmodal.png","services/itemService.js","pages/HomePage/HomePage.jsx","components/IgModal/IgModal.jsx","pages/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","itemService","ItemService","Object","classCallCheck","this","request","axios","create","baseURL","headers","igRequest","console","log","url","get","userInfoSource","jsonObject","data","match","slice","postInfo","JSON","parse","entry_data","hasOwnProperty","responseData","country_code","language_code","display_url","PostPage","graphql","shortcode_media","number_of_comments","edge_media_to_comment","count","number_of_likes","edge_media_preview_like","profile_pic","owner","profile_pic_url","username","is_verified","followed_by_viewer","comments","edges","time_of_post","taken_at_timestamp","error","_context","t0","toString","HomePage","Component","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","postData","embedUrl","onChange","bind","assertThisInitialized","submitUrl","_this2","igTestFunc","then","setState","concat","e","target","value","_this3","preventDefault","react_default","a","createElement","className","class","src","require","onSubmit","placeholder","name","ref","width","height","frameBorder","App","BrowserRouter","basename","Route","exact","path","render","pages_HomePage_HomePage","Boolean","window","location","hostname","ReactDOM","pages_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b1f31b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/igmodal.20eff35b.png\";","import axios from 'axios';\n\nclass ItemService {\n\tconstructor() {\n\t\tthis.request = axios.create({\n\t\t\tbaseURL: 'http://localhost:5000/',\n\t\t\theaders: {}\n\t\t});\n\t\tthis.igRequest = axios.create({\n\t\t\tbaseURL: 'https://www.instagram.com/',\n\t\t\theaders: {}\n\t\t});\n\t}\n\n\ttestFunc() {\n\t\t// return this.request({method: 'GET', url: '/api/items'})\n  //   \t\t.then((response) => console.log(response.data));\n\t\treturn console.log('working');\n\t}\n\n\tasync igTestFunc(url) {\n\t\tconst res = [];\n\t\tvar responseData;\n\t    try {\n\t        const userInfoSource = await axios.get(url);\n\t        // const userInfoSource = await this.igRequest({method: 'GET', url: `${url}`});\n\n\t        // userInfoSource.data contains the HTML from Axios\n\t        var jsonObject = userInfoSource.data.match(/<script type=\"text\\/javascript\">window\\._sharedData = (.*)<\\/script>/)[1].slice(0, -1)\n\t        console.log(jsonObject);\n\t        // Post pasted link\n\t        const postInfo = JSON.parse(jsonObject);\n\t\t\tconst urlType = postInfo.entry_data.hasOwnProperty('PostPage') ? 'post' : 'profile';\n\t\t\t// responseData = {\n\t  //       \tcountry_code: postInfo.country_code,\n\t  //       \tlanguage_code: postInfo.language_code,\n\t  //       \tdisplay_url: postInfo.entry_data.PostPage[0].graphql.shortcode_media.display_url,\n\t  //       \tnumber_of_comments: postInfo.entry_data.PostPage[0].graphql.shortcode_media.edge_media_to_comment.count,\n\t  //       \tnumber_of_likes: postInfo.entry_data.PostPage[0].graphql.shortcode_media.edge_media_preview_like.count\n\t  //       \t// ,sponsors: postInfo.entry_data.PostPage[0].graphql.shortcode_media.edge_media_to_sponsor_user\n\n\t  //       }\n\n\t        responseData = {\n\t        \tcountry_code: postInfo.country_code,\n\t        \tlanguage_code: postInfo.language_code,\n\t        \tdisplay_url: postInfo.entry_data.PostPage[0].graphql.shortcode_media.display_url,\n\t        \tnumber_of_comments: postInfo.entry_data.PostPage[0].graphql.shortcode_media.edge_media_to_comment.count,\n\t        \tnumber_of_likes: postInfo.entry_data.PostPage[0].graphql.shortcode_media.edge_media_preview_like.count,\n\t\t\t\tprofile_pic: postInfo.entry_data.PostPage[0].graphql.shortcode_media.owner.profile_pic_url,\n\t\t\t\tusername: postInfo.entry_data.PostPage[0].graphql.shortcode_media.owner.username,\n\t\t\t\tis_verified: postInfo.entry_data.PostPage[0].graphql.shortcode_media.owner.is_verified,\n\t\t\t\tfollowed_by_viewer: postInfo.entry_data.PostPage[0].graphql.shortcode_media.owner.followed_by_viewer,\n\t\t\t\tcomments: postInfo.entry_data.PostPage[0].graphql.shortcode_media.edge_media_to_comment.edges,\n\t\t\t\t// comments text: postInfo.entry_data.PostPage[0].graphql.shortcode_media.edge_media_to_comment.edges[0].node.text,\n\t\t\t\t// comments username: postInfo.entry_data.PostPage[0].graphql.shortcode_media.edge_media_to_comment.edges[0].node.owner.username,\n\t\t\t\ttime_of_post: postInfo.entry_data.PostPage[0].graphql.shortcode_media.taken_at_timestamp\n\t        \t// ,sponsors: postInfo.entry_data.PostPage[0].graphql.shortcode_media.edge_media_to_sponsor_user\n\n\t        }\n\t        console.log(responseData);\n\n\t        // Screenshot of post\n\t        // var postData = userInfoSource.data.match(/<article>(.*?)<\\/article>/g);\n\t        // console.log('postData', postData);\n\n\t        // User pasted link\n\t        // const userInfo = JSON.parse(jsonObject)\n\t        // // Retrieve only the first 10 results\n\t        // const mediaArray = userInfo.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 10)\n\t        // for (let media of mediaArray) {\n\t        //     const node = media.node\n\t            \n\t        //     // Process only if is an image\n\t        //     if ((node.__typename && node.__typename !== 'GraphImage')) {\n\t        //         continue\n\t        //     }\n\n\t        //     // Push the thumbnail src in the array\n\t        //     res.push(node.thumbnail_src)\n\t        // }\n\t    } catch (e) {\n\t        console.error('Unable to retrieve photos. Reason: ' + e.toString())\n\t    }\n\t    return responseData;\n\t}\n}\n\nexport default new ItemService();","import React, { Component } from 'react';\n// Services\nimport itemService from '../../services/itemService';\n// Components\nimport IgModal from '../../components/IgModal/IgModal';\n// Stylesheets\nimport './HomePage.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass HomePage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpostData: null,\n\t\t\turl: 'https://www.instagram.com/p/BvmpcOWhHId/',\n\t\t\tembedUrl: ''\n\t\t}\n\t    this.onChange = this.onChange.bind(this);\n\t    this.submitUrl = this.submitUrl.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\titemService.igTestFunc(this.state.url).then(postData => {\n\t\t\tthis.setState({\n\t\t    postData: postData,\n\t\t    embedUrl: `${this.state.url}embed`\n\t\t  });\n\t\t});\n\t}\n\n\tonChange(e) {\n\t\tthis.setState({\n\t\t  url: e.target.value\n\t\t});\n\t}\n\n\tsubmitUrl(e) {\n\t\te.preventDefault();\n\t\tconst url = this.state.url;\n\t\tconsole.log(url)\n\t\titemService.igTestFunc(url).then(postData => {\n\t\t\tthis.setState({\n\t\t    postData: postData,\n\t\t    embedUrl: `${url}embed`\n\t\t  });\n\t\t});\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t<div className=\"container-fluid\">\n\t\t\t<h1 className=\"text-center titleLine\">Instagram Stats</h1>\n\t\t\t<div className=\"row justify-content-md-center\">\n\t\t\t\t<div class=\"col-md-2 text-center\">Ad Customization</div>\n\t\t\t\t<div class=\"col-md-2 text-center\">Media Value</div>\n\t\t\t\t<div class=\"col-md-2 text-center\">Contact</div>\n\t\t\t</div>\n\t\t\t<div className=\"text-center mt-3 mb-3\">The currency for influencer sponsorship valuations</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-sm-8\">\n\t\t\t\t\t{/* this.state.postData && <IgModal postData={this.state.postData} /> */}\n\t\t\t\t\t<img className=\"img-fluid float-right\" src={require('../../igmodal.png')}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm-4\">\n\t\t\t\t\t<div className=\"container d-flex h-100\">\n\t\t\t\t\t\t<div className=\"row align-self-center\">\n\t\t\t\t\t\t\t<div className=\"col-sm-2\">\n\t\t\t\t\t\t\t\t<span className=\"adEqual\">=</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-sm-8\">\n\t\t\t\t\t\t\t\t<span className=\"adMoney\">$16,150</span>\n\t\t\t\t\t\t\t\t<span className=\"adDescription align-center\">@alexisren Market Value for Branded Content sponsorship on this specific post (pictured left)</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"text-center mt-5\">Have an ad in mind with a certain influencer? Check out how much you should be paying first!</div>\n\t\t\t<div className=\"row justify-content-center mb-5\">\n\t\t\t\t<form onSubmit={this.submitUrl} className=\"input-group md-form form-sm form-2 pl-0 col-sm-5\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"Paste the influencer’s post link you wish to value in here!\"\n\t\t\t\t\t\tname=\"url\"\n\t\t\t\t\t\tref=\"url\"\n\t\t\t\t\t\tvalue={this.state.url}\n\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"input-group-append\">\n\t\t\t\t\t<button className=\"btn btn-info\">GO</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-sm-4 text-center\">\n\t\t\t\t\t<iframe width=\"300\" height=\"500\" src=\"https://www.instagram.com/p/BuWxLVbju91/embed\" frameBorder=\"0\"></iframe>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm-4 text-center\">\n\t\t\t\t\t<iframe width=\"300\" height=\"500\" src=\"https://www.instagram.com/p/BvXYVKHhSlb/embed\" frameBorder=\"0\"></iframe>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm-4 text-center\">\n\t\t\t\t\t<iframe width=\"300\" height=\"500\" src=\"https://www.instagram.com/p/BviYL1-nnYy/embed\" frameBorder=\"0\"></iframe>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\n// Services\n// Components\n// Stylesheets\nimport './IgModal.css';\n\nclass IgModal extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpostData: this.props.postData\n\t\t}\n\t    // this.onChange = this.onChange.bind(this);\n\t    // this.submitUrl = this.submitUrl.bind(this);\n\t}\n\trender() {\n\t\treturn (\n\t\t<div id=\"DIV_1\" className=\"reset-this\">\n\t\t    <article id=\"ARTICLE_2\">\n\t\t        <header id=\"HEADER_3\">\n\t\t            <div id=\"DIV_4\">\n\t\t                <canvas id=\"CANVAS_5\">\n\t\t                </canvas>\n\t\t                <a href=\"/undefeatedinc/\" id=\"A_6\"><img src={this.state.postData.profile_pic} alt=\"undefeatedinc's profile picture\" id=\"IMG_7\" /></a>\n\t\t            </div>\n\t\t            <div id=\"DIV_8\">\n\t\t                <div id=\"DIV_9\">\n\t\t                    <div id=\"DIV_10\">\n\t\t                        <h2 id=\"H2_11\">\n\t\t                            <a title={this.state.postData.username} href={this.state.postData.username} id=\"A_12\">{this.state.postData.username}</a>\n\t\t                        </h2>\n\t\t                        <span id=\"SPAN_13\">Verified</span>\n\t\t                    </div>\n\t\t                    <div id=\"DIV_14\">\n\t\t                        <span id=\"SPAN_15\">•</span>\n\t\t                        <button type=\"button\" id=\"BUTTON_16\">\n\t\t                        {this.state.postData.followed_by_viewer ? 'Following' : 'Follow'}\n\t\t                        </button>\n\t\t                    </div>\n\t\t                </div>\n\t\t                <div id=\"DIV_17\">\n\t\t                    <div id=\"DIV_18\">\n\t\t                    </div>\n\t\t                    <div id=\"DIV_19\">\n\t\t                    </div>\n\t\t                </div>\n\t\t            </div>\n\t\t        </header>\n\t\t        <div id=\"DIV_20\">\n\t\t            <div id=\"DIV_21\">\n\t\t                <div id=\"DIV_22\">\n\t\t                    <div id=\"DIV_23\">\n\t\t                        <img alt=\"Image may contain: sky, cloud and outdoor\" src={this.state.postData.display_url} id=\"IMG_24\" />\n\t\t                    </div>\n\t\t                    <div id=\"DIV_25\">\n\t\t                    </div>\n\t\t                </div>\n\t\t            </div>\n\t\t        </div>\n\t\t        <div id=\"DIV_26\">\n\t\t            <section id=\"SECTION_27\">\n\t\t                <span id=\"SPAN_28\"><button id=\"BUTTON_29\">\n\t\t                <span id=\"SPAN_30\" />\n\t\t                </button></span><span id=\"SPAN_31\"><button id=\"BUTTON_32\">\n\t\t                <span id=\"SPAN_33\" />\n\t\t                </button></span><span id=\"SPAN_34\"><button id=\"BUTTON_35\">\n\t\t                <span id=\"SPAN_36\" />\n\t\t                </button></span><span id=\"SPAN_37\"><button id=\"BUTTON_38\">\n\t\t                <span id=\"SPAN_39\" />\n\t\t                </button></span>\n\t\t            </section>\n\t\t            <section id=\"SECTION_40\">\n\t\t                <div id=\"DIV_41\">\n\t\t                    <div id=\"DIV_42\">\n\t\t                        <button type=\"button\" id=\"BUTTON_43\">\n\t\t                        <span id=\"SPAN_44\">{this.state.postData.number_of_likes}</span> likes\n\t\t                        </button>\n\t\t                    </div>\n\t\t                </div>\n\t\t            </section>\n\t\t            <div id=\"DIV_45\">\n\t\t                <ul id=\"UL_46\">\n\t\t                \t{\n\t\t                \t\tthis.state.postData.comments.map((comment, i) => {\n\t\t                \t\t\tconsole.log('comment', comment)\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li key={i} id=\"LI_47\">\n\t\t\t\t\t\t\t\t\t\t\t<div id=\"DIV_48\">\n\t\t\t\t\t                            <div id=\"DIV_49\">\n\t\t\t\t\t                                <div id=\"DIV_50\">\n\t\t\t\t\t                                    <h3 id=\"H3_51\">\n\t\t\t\t\t                                        <a title=\"comment.node.owner.username\" href={`/${comment.node.owner.username}/`} id=\"A_52\">{comment.node.owner.username}</a>\n\t\t\t\t\t                                    </h3>\n\t\t\t\t\t                                    <span id=\"SPAN_53\">{comment.node.text}</span>\n\t\t\t\t\t                                </div>\n\t\t\t\t\t                            </div>\n\t\t\t\t\t                            <span id=\"SPAN_54\"><button id=\"BUTTON_55\">\n\t\t\t\t\t                            <span id=\"SPAN_56\" />\n\t\t\t\t\t                            </button></span>\n\t\t\t\t\t                        </div>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t                \t}\n\t\t                    \n\t\t                </ul>\n\t\t            </div>\n\t\t            <div id=\"DIV_253\">\n\t\t                <a href=\"/p/BviQFzihZor/\" id=\"A_254\" />\n\t\t                <time id=\"TIME_255\">\n\t\t                1 day ago\n\t\t                </time>\n\t\t            </div>\n\t\t            <section id=\"SECTION_256\">\n\t\t                <div id=\"DIV_257\">\n\t\t                    <form method=\"POST\" id=\"FORM_258\">\n\t\t                        <textarea placeholder=\"Add a comment…\" id=\"TEXTAREA_259\" defaultValue={\"\\t\\t\\t\\t\\t\\t\\t\"} />\n\t\t                    </form>\n\t\t                </div>\n\t\t            </section>\n\t\t        </div>\n\t\t        <div id=\"DIV_260\">\n\t\t            <button id=\"BUTTON_261\">\n\t\t            <span id=\"SPAN_262\" />\n\t\t            </button>\n\t\t        </div>\n\t\t    </article>\n\t\t</div>\n\t\t)\n\t}\n}\n\nexport default IgModal;","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\n// Services\n// Pages\nimport HomePage from '../HomePage/HomePage';\n// Stylesheets\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n\t<Router basename=\"/instagram-stats\">\n\t\t<div className=\"App\">\n\t\t\t<Route\n\t\t\t\texact path='/'\n\t\t\t\trender={(props) => <HomePage {...props} />}\n\t\t\t/>\n\t\t</div>\n\t</Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}